{
  "source": 2,
  "revision": 97,
  "description": null,
  "createdBy": {
    "displayName": "Sandeep Maurya",
    "url": "https://vssps.dev.azure.com/e/Microsoft/_apis/Identities/b8a89a7b-4403-42f2-b8ac-7237075a2575",
    "_links": { "avatar": { "href": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.YzBhMDQxMDYtNjU3Yy03YjM5LWE2YmYtYmIwZDQ3NGViYTBj" } },
    "id": "b8a89a7b-4403-42f2-b8ac-7237075a2575",
    "uniqueName": "samau@microsoft.com",
    "imageUrl": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.YzBhMDQxMDYtNjU3Yy03YjM5LWE2YmYtYmIwZDQ3NGViYTBj",
    "descriptor": "aad.YzBhMDQxMDYtNjU3Yy03YjM5LWE2YmYtYmIwZDQ3NGViYTBj"
  },
  "createdOn": "2019-06-03T06:47:56.357Z",
  "modifiedBy": {
    "displayName": "Sandeep Maurya",
    "url": "https://vssps.dev.azure.com/e/Microsoft/_apis/Identities/b8a89a7b-4403-42f2-b8ac-7237075a2575",
    "_links": { "avatar": { "href": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.YzBhMDQxMDYtNjU3Yy03YjM5LWE2YmYtYmIwZDQ3NGViYTBj" } },
    "id": "b8a89a7b-4403-42f2-b8ac-7237075a2575",
    "uniqueName": "samau@microsoft.com",
    "imageUrl": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.YzBhMDQxMDYtNjU3Yy03YjM5LWE2YmYtYmIwZDQ3NGViYTBj",
    "descriptor": "aad.YzBhMDQxMDYtNjU3Yy03YjM5LWE2YmYtYmIwZDQ3NGViYTBj"
  },
  "modifiedOn": "2019-06-06T13:15:16.057Z",
  "isDeleted": false,
  "variables": {},
  "variableGroups": [],
  "environments": [
    {
      "id": 33,
      "name": "Release to Dev",
      "rank": 1,
      "owner": {
        "displayName": "Sandeep Maurya",
        "url": "https://vssps.dev.azure.com/e/Microsoft/_apis/Identities/b8a89a7b-4403-42f2-b8ac-7237075a2575",
        "_links": { "avatar": { "href": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.YzBhMDQxMDYtNjU3Yy03YjM5LWE2YmYtYmIwZDQ3NGViYTBj" } },
        "id": "b8a89a7b-4403-42f2-b8ac-7237075a2575",
        "uniqueName": "samau@microsoft.com",
        "imageUrl": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.YzBhMDQxMDYtNjU3Yy03YjM5LWE2YmYtYmIwZDQ3NGViYTBj",
        "descriptor": "aad.YzBhMDQxMDYtNjU3Yy03YjM5LWE2YmYtYmIwZDQ3NGViYTBj"
      },
      "variables": {},
      "variableGroups": [ 17 ],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 101
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": { "id": 102 },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 103
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": { "parallelExecutionType": 0 },
            "agentSpecification": null,
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "_Coupons-CI",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 4593,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Deploy application",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Coupon Jumpbox",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.json",
                "csmParametersFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.parameters.json",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/jumpbox.json",
                "csmParametersFile": "",
                "overrideParameters": "-vmssName $(appprefix)-jb -instanceCount 1 -adminUsername $(vmadmin) -adminPassword $(vmpassword) -subnetRange $(jbSubnet) -vnetRange $(jbVnet)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Coupon App",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.json",
                "csmParametersFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.parameters.json",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/vm.json",
                "csmParametersFile": "",
                "overrideParameters": "-name $(appprefix)-app -adminUsername $(vmadmin) -adminPassword $(vmpassword) -vnetRange $(appVnet) -subnetRange $(appSubnet) -imageID $(appImageID)\n",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "appvmarmoutput",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Open 8080 on App NSG to Internet",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$RGname=\"$(resourcegroup)\"\n$port=8080\n$rulename=\"allowAppPort$port\"\n$nsgname=\"$(appprefix)-app\"\n\n# Get the NSG resource\n$resource = Get-AzResource | Where {$_.ResourceGroupName –eq $RGname -and $_.ResourceType -eq \"Microsoft.Network/networkSecurityGroups\"} \n$nsg = Get-AzNetworkSecurityGroup -Name $nsgname -ResourceGroupName $RGname\n\n# Add the inbound security rule.\n$nsg | Add-AzNetworkSecurityRuleConfig -Name $rulename -Description \"Allow app port\" -Access Allow `\n    -Protocol * -Direction Inbound -Priority 100 -SourceAddressPrefix \"*\" -SourcePortRange * `\n    -DestinationAddressPrefix * -DestinationPortRange $port\n\n# Update the NSG.\n$nsg | Set-AzNetworkSecurityGroup",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Coupon Data",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.json",
                "csmParametersFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.parameters.json",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/vm.json",
                "csmParametersFile": "",
                "overrideParameters": "-name $(appprefix)-data -adminUsername $(vmadmin) -adminPassword $(vmpassword) -vnetRange $(dataVnet) -subnetRange $(dataSubnet) -imageID $(dataImageID)\n",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Open 3306 on Data NSG to Build Server",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$RGname=\"$(resourcegroup)\"\n$port=3306\n$nsgname=\"$(appprefix)-data\"\n\n# Get my public IP\n$myIp = Invoke-RestMethod -Method Get -Uri \"https://api.ipify.org\"\n$rulename=\"allow3306To$myIp\"\n\n# Get the NSG resource\n$resource = Get-AzResource | Where {$_.ResourceGroupName –eq $RGname -and $_.ResourceType -eq \"Microsoft.Network/networkSecurityGroups\"} \n$nsg = Get-AzNetworkSecurityGroup -Name $nsgname -ResourceGroupName $RGname\n\n$existingRule = Get-AzNetworkSecurityRuleConfig -NetworkSecurityGroup $nsg | Where-Object {$_.Name -eq $rulename}\n\nif($existingRule -eq $null)\n{\n    Write-Host 'Creating new inbound security rule'\n    \n    # Find existing max priority.\n    $maxPriority = 100;\n    foreach ($rule in (Get-AzNetworkSecurityRuleConfig -NetworkSecurityGroup $nsg))\n    {\n        if(($rule.Priority -lt 4096) -and ($rule.Priority -ge $maxPriority))\n        {\n            $maxPriority = $rule.Priority;\n        }\n    }\n\n    # Add new rule after all the prior ones.\n    $maxPriority++\n\n    # Add the inbound security rule.\n    $nsg | Add-AzNetworkSecurityRuleConfig -Name $rulename -Description \"Allow app port\" -Access Allow `\n        -Protocol * -Direction Inbound -Priority $maxPriority -SourceAddressPrefix \"$myIp\" -SourcePortRange * `\n        -DestinationAddressPrefix * -DestinationPortRange $port\n\n    # Update the NSG.\n    $nsg | Set-AzNetworkSecurityGroup\n}\n\n# TODO Warmup\n",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "App-Data Vnet Peering",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-existing-vnet-to-vnet-peering/azuredeploy.json",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/peer.json",
                "csmParametersFile": "",
                "overrideParameters": "-existingLocalVirtualNetworkName $(appprefix)-app-Vnet -existingRemoteVirtualNetworkName $(appprefix)-data-Vnet -existingRemoteVirtualNetworkResourceGroupName $(resourcegroup) -location $(location)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "JB-App Vnet Peering",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-existing-vnet-to-vnet-peering/azuredeploy.json",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/peer.json",
                "csmParametersFile": "",
                "overrideParameters": "-existingLocalVirtualNetworkName $(appprefix)-jb-Vnet -existingRemoteVirtualNetworkName $(appprefix)-app-Vnet -existingRemoteVirtualNetworkResourceGroupName $(resourcegroup) -location $(location)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "App-JB Vnet Peering",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-existing-vnet-to-vnet-peering/azuredeploy.json",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/peer.json",
                "csmParametersFile": "",
                "overrideParameters": "-existingLocalVirtualNetworkName $(appprefix)-app-Vnet -existingRemoteVirtualNetworkName $(appprefix)-jb-Vnet -existingRemoteVirtualNetworkResourceGroupName $(resourcegroup) -location $(location)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Data-App Vnet Peering",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-existing-vnet-to-vnet-peering/azuredeploy.json",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/peer.json",
                "csmParametersFile": "",
                "overrideParameters": "-existingLocalVirtualNetworkName $(appprefix)-data-Vnet -existingRemoteVirtualNetworkName $(appprefix)-app-Vnet -existingRemoteVirtualNetworkResourceGroupName $(resourcegroup) -location $(location)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "JIT access for Jumpbox",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$JitPolicy = (@{\n id=\"/subscriptions/$(azureSubID)/$(resourcegroup)/providers/Microsoft.Compute/virtualMachines/$(appprefix)-jb\"\nports=(@{\n     number=22;\n     protocol=\"*\";\n     allowedSourceAddressPrefix=@(\"*\");\n     maxRequestAccessDuration=\"PT3H\"},\n     @{\n     number=3389;\n     protocol=\"*\";\n     allowedSourceAddressPrefix=@(\"*\");\n     maxRequestAccessDuration=\"PT3H\"})})\n$JitPolicy = (@{\n id=\"/subscriptions/SUBSCRIPTIONID/resourceGroups/RESOURCEGROUP/providers/Microsoft.Compute/virtualMachines/VMNAME\"\nports=(@{\n     number=22;\n     protocol=\"*\";\n     allowedSourceAddressPrefix=@(\"*\");\n     maxRequestAccessDuration=\"PT3H\"},\n     @{\n     number=3389;\n     protocol=\"*\";\n     allowedSourceAddressPrefix=@(\"*\");\n     maxRequestAccessDuration=\"PT3H\"})})\n\n$JitPolicyArr=@($JitPolicy)\nSet-AzJitNetworkAccessPolicy -Kind \"Basic\" -Location $(location) -Name \"default\" -ResourceGroupName $(resourcegroup) -VirtualMachine $JitPolicyArr \n\n\n\n",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": "6.7.0"
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Extract Data VM Public and Private IPs",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$nic = Get-AzNetworkInterface -Name $(appprefix)-data-nic -ResourceGroupName $(resourcegroup)\n$privateIp = $nic.IpConfigurations | select-object -ExpandProperty PrivateIpAddress\n$publicIp = (Get-AzPublicIpAddress -ResourceGroupName $(resourcegroup) -Name $(appprefix)-data-ip).IpAddress\n\nWrite-Host \"##vso[task.setvariable variable=dataprivateip;]$privateIp\"\nWrite-Host \"##vso[task.setvariable variable=datapublicip;]$publicIp\"\n\n",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Update Env. Vars on App VM",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "Invoke-AzVMRunCommand -ResourceGroupName '$(resourcegroup)' -Name '$(appprefix)-app-vm' -CommandId 'RunPowerShellScript' -ScriptPath '$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/IaC/UpdateEnvVars.ps1' -Parameter @{datasourceUrl = 'jdbc:mysql://$(dataprivateip):3306/hotel_coupon?verifyServerCertificate=false\"&\"useSSL=false\"&\"requireSSL=false'; datasourceUsername = '$(databaseusername)'; datasourcePassword ='$(databasepassword)'}",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Extract App VM Public IP",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$publicIp = (Get-AzPublicIpAddress -ResourceGroupName $(resourcegroup) -Name $(appprefix)-app-ip).IpAddress\n\nWrite-Host \"##vso[task.setvariable variable=apppublicip;]$publicIp\"",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "Warmup Tomcat Manager",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "$baseUrl = \"http://$(apppublicip):8080/manager/text\"\n$User = \"manager\"\n$PWord = ConvertTo-SecureString -String \"manager@123\" -AsPlainText -Force\n$Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $User, $PWord\n\nWrite-Host $baseUrl\n\n$retries = 5\nwhile ($retries -gt 0) \n{\n    try\n    {    \n        Invoke-RestMethod -Method Get -Uri \"$baseUrl/list\" -Credential $Credential -TimeoutSec 90\n        Invoke-RestMethod -Method Get -Uri \"$baseUrl/serverinfo\" -Credential $Credential -TimeoutSec 90\n        Invoke-RestMethod -Method Get -Uri \"$baseUrl/stop?path=/examples\" -Credential $Credential -TimeoutSec 90\n        Invoke-RestMethod -Method Get -Uri \"$baseUrl/start?path=/examples\" -Credential $Credential -TimeoutSec 90\n        break;\n    }\n    catch\n    {\n        Write-Host 'Error' $_.Exception\n       \n        $retries--\n        if($retries -le 0)\n        {\n            throw\n        }\n\n        Start-Sleep -Seconds 10\n    }\n }\n",
                "errorActionPreference": "stop",
                "failOnStderr": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": ""
              }
            },
            {
              "environment": {},
              "taskId": "5d93dbe2-e57f-4b7c-a872-1e6b80a01904",
              "version": "0.*",
              "name": "Deploy application to a Tomcat server",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": true,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "TomcatUrl": "http://$(apppublicip):8080",
                "Username": "manager",
                "Password": "manager@123",
                "Warfile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/target/ROOT.war",
                "Context": "/",
                "ServerVersion": "7OrAbove"
              }
            },
            {
              "environment": {},
              "taskId": "c016cc55-9914-4a9c-b9df-f24d6f9a40f6",
              "version": "3.*",
              "name": "AzSK_SVTs ",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "GenerateMethodParameterSetSelection": "ResourceGroupName",
                "ResourceGroupName": "$(resourcegroup)",
                "TagName": "",
                "TagValue": "",
                "SubscriptionId": "ES-INT-DOJO-DEV-DOJOWB-Conn",
                "EnableOMSLogging": "true",
                "AggregateControlsStatus": "false",
                "DisableAutoUpdate": "false"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        {
          "name": "ReleaseStarted",
          "conditionType": 1,
          "value": ""
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [],
      "currentRelease": {
        "id": 325,
        "url": "https://servicescode.vsrm.visualstudio.com/5f64706a-c618-4444-8fec-a037e2197618/_apis/Release/releases/325",
        "_links": {}
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {},
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": [],
      "badgeUrl": "https://servicescode.vsrm.visualstudio.com/_apis/public/Release/badge/5f64706a-c618-4444-8fec-a037e2197618/12/33"
    },
    {
      "id": 44,
      "name": "Release to SIT",
      "rank": 2,
      "owner": {
        "displayName": "Sandeep Maurya",
        "url": "https://vssps.dev.azure.com/e/Microsoft/_apis/Identities/b8a89a7b-4403-42f2-b8ac-7237075a2575",
        "_links": { "avatar": { "href": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.YzBhMDQxMDYtNjU3Yy03YjM5LWE2YmYtYmIwZDQ3NGViYTBj" } },
        "id": "b8a89a7b-4403-42f2-b8ac-7237075a2575",
        "uniqueName": "samau@microsoft.com",
        "imageUrl": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.YzBhMDQxMDYtNjU3Yy03YjM5LWE2YmYtYmIwZDQ3NGViYTBj",
        "descriptor": "aad.YzBhMDQxMDYtNjU3Yy03YjM5LWE2YmYtYmIwZDQ3NGViYTBj"
      },
      "variables": {},
      "variableGroups": [ 19 ],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": false,
            "isNotificationOn": false,
            "approver": {
              "displayName": "[DevOps-Dojo]\\DevOps-Dojo Team",
              "url": "https://vssps.dev.azure.com/e/Microsoft/_apis/Identities/992a641a-9d90-47f1-bcaf-017c3602776e",
              "_links": { "avatar": { "href": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/vssgp.Uy0xLTktMTU1MTM3NDI0NS0xNzg1NzUwNjIzLTQxNTY0Njc4OC0yNDE0NjQ5Mzk5LTM3OTMzMTk0NDgtMS0zNzc0MjY5NTI1LTg5Njg5NjA3Ni0yMjU5Nzg3NjIyLTMwMjgwMDI1NTY" } },
              "id": "992a641a-9d90-47f1-bcaf-017c3602776e",
              "uniqueName": "vstfs:///Classification/TeamProject/5f64706a-c618-4444-8fec-a037e2197618\\DevOps-Dojo Team",
              "imageUrl": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/vssgp.Uy0xLTktMTU1MTM3NDI0NS0xNzg1NzUwNjIzLTQxNTY0Njc4OC0yNDE0NjQ5Mzk5LTM3OTMzMTk0NDgtMS0zNzc0MjY5NTI1LTg5Njg5NjA3Ni0yMjU5Nzg3NjIyLTMwMjgwMDI1NTY",
              "isContainer": true,
              "descriptor": "vssgp.Uy0xLTktMTU1MTM3NDI0NS0xNzg1NzUwNjIzLTQxNTY0Njc4OC0yNDE0NjQ5Mzk5LTM3OTMzMTk0NDgtMS0zNzc0MjY5NTI1LTg5Njg5NjA3Ni0yMjU5Nzg3NjIyLTMwMjgwMDI1NTY"
            },
            "id": 144
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": true,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": { "id": 142 },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 143
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": { "parallelExecutionType": 0 },
            "agentSpecification": null,
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "_Coupons-CI",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 4593,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Deploy application",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Coupon Jumpbox",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.json",
                "csmParametersFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.parameters.json",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/jumpbox.json",
                "csmParametersFile": "",
                "overrideParameters": "-vmssName $(appprefix)-jb -instanceCount 1 -adminUsername $(vmadmin) -adminPassword $(vmpassword) -subnetRange $(jbSubnet) -vnetRange $(jbVnet)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Coupon App",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.json",
                "csmParametersFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.parameters.json",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/vm.json",
                "csmParametersFile": "",
                "overrideParameters": "-name $(appprefix)-app -adminUsername $(vmadmin) -adminPassword $(vmpassword) -vnetRange $(appVnet) -subnetRange $(appSubnet) -imageID $(appImageID)\n",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "appvmarmoutput",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Open 8080 on App NSG to Internet",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$RGname=\"$(resourcegroup)\"\n$port=8080\n$rulename=\"allowAppPort$port\"\n$nsgname=\"$(appprefix)-app\"\n\n# Get the NSG resource\n$resource = Get-AzResource | Where {$_.ResourceGroupName –eq $RGname -and $_.ResourceType -eq \"Microsoft.Network/networkSecurityGroups\"} \n$nsg = Get-AzNetworkSecurityGroup -Name $nsgname -ResourceGroupName $RGname\n\n# Add the inbound security rule.\n$nsg | Add-AzNetworkSecurityRuleConfig -Name $rulename -Description \"Allow app port\" -Access Allow `\n    -Protocol * -Direction Inbound -Priority 100 -SourceAddressPrefix \"*\" -SourcePortRange * `\n    -DestinationAddressPrefix * -DestinationPortRange $port\n\n# Update the NSG.\n$nsg | Set-AzNetworkSecurityGroup",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Coupon Data",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.json",
                "csmParametersFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.parameters.json",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/vm.json",
                "csmParametersFile": "",
                "overrideParameters": "-name $(appprefix)-data -adminUsername $(vmadmin) -adminPassword $(vmpassword) -vnetRange $(dataVnet) -subnetRange $(dataSubnet) -imageID $(dataImageID)\n",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Open 3306 on Data NSG to Build Server",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$RGname=\"$(resourcegroup)\"\n$port=3306\n$nsgname=\"$(appprefix)-data\"\n\n# Get my public IP\n$myIp = Invoke-RestMethod -Method Get -Uri \"https://api.ipify.org\"\n$rulename=\"allow3306To$myIp\"\n\n# Get the NSG resource\n$resource = Get-AzResource | Where {$_.ResourceGroupName –eq $RGname -and $_.ResourceType -eq \"Microsoft.Network/networkSecurityGroups\"} \n$nsg = Get-AzNetworkSecurityGroup -Name $nsgname -ResourceGroupName $RGname\n\n$existingRule = Get-AzNetworkSecurityRuleConfig -NetworkSecurityGroup $nsg | Where-Object {$_.Name -eq $rulename}\n\nif($existingRule -eq $null)\n{\n    Write-Host 'Creating new inbound security rule'\n    \n    # Find existing max priority.\n    $maxPriority = 100;\n    foreach ($rule in (Get-AzNetworkSecurityRuleConfig -NetworkSecurityGroup $nsg))\n    {\n        if(($rule.Priority -lt 4096) -and ($rule.Priority -ge $maxPriority))\n        {\n            $maxPriority = $rule.Priority;\n        }\n    }\n\n    # Add new rule after all the prior ones.\n    $maxPriority++\n\n    # Add the inbound security rule.\n    $nsg | Add-AzNetworkSecurityRuleConfig -Name $rulename -Description \"Allow app port\" -Access Allow `\n        -Protocol * -Direction Inbound -Priority $maxPriority -SourceAddressPrefix \"$myIp\" -SourcePortRange * `\n        -DestinationAddressPrefix * -DestinationPortRange $port\n\n    # Update the NSG.\n    $nsg | Set-AzNetworkSecurityGroup\n}\n\n# TODO Warmup\n",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "App-Data Vnet Peering",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-existing-vnet-to-vnet-peering/azuredeploy.json",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/peer.json",
                "csmParametersFile": "",
                "overrideParameters": "-existingLocalVirtualNetworkName $(appprefix)-app-Vnet -existingRemoteVirtualNetworkName $(appprefix)-data-Vnet -existingRemoteVirtualNetworkResourceGroupName $(resourcegroup) -location $(location)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "JB-App Vnet Peering",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-existing-vnet-to-vnet-peering/azuredeploy.json",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/peer.json",
                "csmParametersFile": "",
                "overrideParameters": "-existingLocalVirtualNetworkName $(appprefix)-jb-Vnet -existingRemoteVirtualNetworkName $(appprefix)-app-Vnet -existingRemoteVirtualNetworkResourceGroupName $(resourcegroup) -location $(location)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "App-JB Vnet Peering",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-existing-vnet-to-vnet-peering/azuredeploy.json",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/peer.json",
                "csmParametersFile": "",
                "overrideParameters": "-existingLocalVirtualNetworkName $(appprefix)-app-Vnet -existingRemoteVirtualNetworkName $(appprefix)-jb-Vnet -existingRemoteVirtualNetworkResourceGroupName $(resourcegroup) -location $(location)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Data-App Vnet Peering",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-existing-vnet-to-vnet-peering/azuredeploy.json",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/peer.json",
                "csmParametersFile": "",
                "overrideParameters": "-existingLocalVirtualNetworkName $(appprefix)-data-Vnet -existingRemoteVirtualNetworkName $(appprefix)-app-Vnet -existingRemoteVirtualNetworkResourceGroupName $(resourcegroup) -location $(location)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "JIT access for Jumpbox",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$JitPolicy = (@{\n id=\"/subscriptions/$(azureSubID)/$(resourcegroup)/providers/Microsoft.Compute/virtualMachines/$(appprefix)-jb\"\nports=(@{\n     number=22;\n     protocol=\"*\";\n     allowedSourceAddressPrefix=@(\"*\");\n     maxRequestAccessDuration=\"PT3H\"},\n     @{\n     number=3389;\n     protocol=\"*\";\n     allowedSourceAddressPrefix=@(\"*\");\n     maxRequestAccessDuration=\"PT3H\"})})\n$JitPolicy = (@{\n id=\"/subscriptions/SUBSCRIPTIONID/resourceGroups/RESOURCEGROUP/providers/Microsoft.Compute/virtualMachines/VMNAME\"\nports=(@{\n     number=22;\n     protocol=\"*\";\n     allowedSourceAddressPrefix=@(\"*\");\n     maxRequestAccessDuration=\"PT3H\"},\n     @{\n     number=3389;\n     protocol=\"*\";\n     allowedSourceAddressPrefix=@(\"*\");\n     maxRequestAccessDuration=\"PT3H\"})})\n\n$JitPolicyArr=@($JitPolicy)\nSet-AzJitNetworkAccessPolicy -Kind \"Basic\" -Location $(location) -Name \"default\" -ResourceGroupName $(resourcegroup) -VirtualMachine $JitPolicyArr \n\n\n\n",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": "6.7.0"
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Extract Data VM Public and Private IPs",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$nic = Get-AzNetworkInterface -Name $(appprefix)-data-nic -ResourceGroupName $(resourcegroup)\n$privateIp = $nic.IpConfigurations | select-object -ExpandProperty PrivateIpAddress\n$publicIp = (Get-AzPublicIpAddress -ResourceGroupName $(resourcegroup) -Name $(appprefix)-data-ip).IpAddress\n\nWrite-Host \"##vso[task.setvariable variable=dataprivateip;]$privateIp\"\nWrite-Host \"##vso[task.setvariable variable=datapublicip;]$publicIp\"\n\n",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Update Env. Vars on App VM",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "Invoke-AzVMRunCommand -ResourceGroupName '$(resourcegroup)' -Name '$(appprefix)-app-vm' -CommandId 'RunPowerShellScript' -ScriptPath '$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/IaC/UpdateEnvVars.ps1' -Parameter @{datasourceUrl = 'jdbc:mysql://$(dataprivateip):3306/hotel_coupon?verifyServerCertificate=false\"&\"useSSL=false\"&\"requireSSL=false'; datasourceUsername = '$(databaseusername)'; datasourcePassword ='$(databasepassword)'}",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Extract App VM Public IP",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$publicIp = (Get-AzPublicIpAddress -ResourceGroupName $(resourcegroup) -Name $(appprefix)-app-ip).IpAddress\n\nWrite-Host \"##vso[task.setvariable variable=apppublicip;]$publicIp\"",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "Warmup Tomcat Manager",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "$baseUrl = \"http://$(apppublicip):8080/manager/text\"\n$User = \"manager\"\n$PWord = ConvertTo-SecureString -String \"manager@123\" -AsPlainText -Force\n$Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $User, $PWord\n\nWrite-Host $baseUrl\n\n$retries = 5\nwhile ($retries -gt 0) \n{\n    try\n    {    \n        Invoke-RestMethod -Method Get -Uri \"$baseUrl/list\" -Credential $Credential -TimeoutSec 90\n        Invoke-RestMethod -Method Get -Uri \"$baseUrl/serverinfo\" -Credential $Credential -TimeoutSec 90\n        Invoke-RestMethod -Method Get -Uri \"$baseUrl/stop?path=/examples\" -Credential $Credential -TimeoutSec 90\n        Invoke-RestMethod -Method Get -Uri \"$baseUrl/start?path=/examples\" -Credential $Credential -TimeoutSec 90\n        break;\n    }\n    catch\n    {\n        Write-Host 'Error' $_.Exception\n       \n        $retries--\n        if($retries -le 0)\n        {\n            throw\n        }\n\n        Start-Sleep -Seconds 10\n    }\n }\n",
                "errorActionPreference": "stop",
                "failOnStderr": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": ""
              }
            },
            {
              "environment": {},
              "taskId": "5d93dbe2-e57f-4b7c-a872-1e6b80a01904",
              "version": "0.*",
              "name": "Deploy application to a Tomcat server",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": true,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "TomcatUrl": "http://$(apppublicip):8080",
                "Username": "manager",
                "Password": "manager@123",
                "Warfile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/target/ROOT.war",
                "Context": "/",
                "ServerVersion": "7OrAbove"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "Update test settings",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "filePath",
                "filePath": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/scripts/UpdateVariablesAtRunTime.ps1",
                "arguments": "-configPath $(System.DefaultWorkingDirectory)/_Coupons-CI/drop/src/main/resources/application.properties  -mysqlUserName $(databaseusername) -mysqlPassword $(databasepassword)  -sourceUrl \"jdbc:mysql://$(datapublicip):3306/hotel_coupon?verifyServerCertificate=false&useSSL=false&requireSSL=false\" ",
                "script": "# Write your powershell commands here.\n\nWrite-Host \"Hello World\"\n\n# Use the environment variables input below to pass secret variables to this script.",
                "errorActionPreference": "stop",
                "failOnStderr": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": ""
              }
            },
            {
              "environment": {},
              "taskId": "ac4ee482-65da-4485-a532-7b085873e532",
              "version": "3.*",
              "name": "Functional Tests with BDD",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "mavenPOMFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/pom.xml",
                "goals": "failsafe:integration-test failsafe:verify",
                "options": "",
                "publishJUnitResults": "true",
                "testResultsFiles": "**/failsafe-reports/TEST-com.example.fabrikam.HotelCoupon.IntegrationTest.CouponControllerBDDIT.xml",
                "testRunTitle": "",
                "codeCoverageTool": "None",
                "classFilter": "",
                "classFilesDirectories": "",
                "srcDirectories": "",
                "failIfCoverageEmpty": "false",
                "javaHomeSelection": "JDKVersion",
                "jdkVersion": "default",
                "jdkUserInputPath": "",
                "jdkArchitecture": "x64",
                "mavenVersionSelection": "Default",
                "mavenPath": "",
                "mavenSetM2Home": "false",
                "mavenOpts": "-Xmx1024m",
                "mavenFeedAuthenticate": "false",
                "sqAnalysisEnabled": "false",
                "sqMavenPluginVersionChoice": "latest",
                "checkstyleAnalysisEnabled": "false",
                "pmdAnalysisEnabled": "false",
                "findbugsAnalysisEnabled": "false"
              }
            },
            {
              "environment": {},
              "taskId": "c016cc55-9914-4a9c-b9df-f24d6f9a40f6",
              "version": "3.*",
              "name": "AzSK_SVTs ",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "GenerateMethodParameterSetSelection": "ResourceGroupName",
                "ResourceGroupName": "$(resourcegroup)",
                "TagName": "",
                "TagValue": "",
                "SubscriptionId": "ES-INT-DOJO-DEV-DOJOWB-Conn",
                "EnableOMSLogging": "true",
                "AggregateControlsStatus": "false",
                "DisableAutoUpdate": "false"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        {
          "name": "Release to Dev",
          "conditionType": 2,
          "value": "4"
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [],
      "currentRelease": {
        "id": 325,
        "url": "https://servicescode.vsrm.visualstudio.com/5f64706a-c618-4444-8fec-a037e2197618/_apis/Release/releases/325",
        "_links": {}
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {},
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": [],
      "badgeUrl": "https://servicescode.vsrm.visualstudio.com/_apis/public/Release/badge/5f64706a-c618-4444-8fec-a037e2197618/12/44"
    },
    {
      "id": 45,
      "name": "Release to QA",
      "rank": 3,
      "owner": {
        "displayName": "Sandeep Maurya",
        "url": "https://vssps.dev.azure.com/e/Microsoft/_apis/Identities/b8a89a7b-4403-42f2-b8ac-7237075a2575",
        "_links": { "avatar": { "href": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.YzBhMDQxMDYtNjU3Yy03YjM5LWE2YmYtYmIwZDQ3NGViYTBj" } },
        "id": "b8a89a7b-4403-42f2-b8ac-7237075a2575",
        "uniqueName": "samau@microsoft.com",
        "imageUrl": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.YzBhMDQxMDYtNjU3Yy03YjM5LWE2YmYtYmIwZDQ3NGViYTBj",
        "descriptor": "aad.YzBhMDQxMDYtNjU3Yy03YjM5LWE2YmYtYmIwZDQ3NGViYTBj"
      },
      "variables": {},
      "variableGroups": [ 20 ],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": false,
            "isNotificationOn": false,
            "approver": {
              "displayName": "[DevOps-Dojo]\\DevOps-Dojo Team",
              "url": "https://vssps.dev.azure.com/e/Microsoft/_apis/Identities/992a641a-9d90-47f1-bcaf-017c3602776e",
              "_links": { "avatar": { "href": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/vssgp.Uy0xLTktMTU1MTM3NDI0NS0xNzg1NzUwNjIzLTQxNTY0Njc4OC0yNDE0NjQ5Mzk5LTM3OTMzMTk0NDgtMS0zNzc0MjY5NTI1LTg5Njg5NjA3Ni0yMjU5Nzg3NjIyLTMwMjgwMDI1NTY" } },
              "id": "992a641a-9d90-47f1-bcaf-017c3602776e",
              "uniqueName": "vstfs:///Classification/TeamProject/5f64706a-c618-4444-8fec-a037e2197618\\DevOps-Dojo Team",
              "imageUrl": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/vssgp.Uy0xLTktMTU1MTM3NDI0NS0xNzg1NzUwNjIzLTQxNTY0Njc4OC0yNDE0NjQ5Mzk5LTM3OTMzMTk0NDgtMS0zNzc0MjY5NTI1LTg5Njg5NjA3Ni0yMjU5Nzg3NjIyLTMwMjgwMDI1NTY",
              "isContainer": true,
              "descriptor": "vssgp.Uy0xLTktMTU1MTM3NDI0NS0xNzg1NzUwNjIzLTQxNTY0Njc4OC0yNDE0NjQ5Mzk5LTM3OTMzMTk0NDgtMS0zNzc0MjY5NTI1LTg5Njg5NjA3Ni0yMjU5Nzg3NjIyLTMwMjgwMDI1NTY"
            },
            "id": 145
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": true,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": { "id": 150 },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 151
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": { "parallelExecutionType": 0 },
            "agentSpecification": null,
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "_Coupons-CI",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 4593,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Deploy application",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Coupon Jumpbox",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.json",
                "csmParametersFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.parameters.json",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/jumpbox.json",
                "csmParametersFile": "",
                "overrideParameters": "-vmssName $(appprefix)-jb -instanceCount 1 -adminUsername $(vmadmin) -adminPassword $(vmpassword) -subnetRange $(jbSubnet) -vnetRange $(jbVnet)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Coupon App",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.json",
                "csmParametersFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.parameters.json",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/vm.json",
                "csmParametersFile": "",
                "overrideParameters": "-name $(appprefix)-app -adminUsername $(vmadmin) -adminPassword $(vmpassword) -vnetRange $(appVnet) -subnetRange $(appSubnet) -imageID $(appImageID)\n",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "appvmarmoutput",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Open 8080 on App NSG to Internet",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$RGname=\"$(resourcegroup)\"\n$port=8080\n$rulename=\"allowAppPort$port\"\n$nsgname=\"$(appprefix)-app\"\n\n# Get the NSG resource\n$resource = Get-AzResource | Where {$_.ResourceGroupName –eq $RGname -and $_.ResourceType -eq \"Microsoft.Network/networkSecurityGroups\"} \n$nsg = Get-AzNetworkSecurityGroup -Name $nsgname -ResourceGroupName $RGname\n\n# Add the inbound security rule.\n$nsg | Add-AzNetworkSecurityRuleConfig -Name $rulename -Description \"Allow app port\" -Access Allow `\n    -Protocol * -Direction Inbound -Priority 100 -SourceAddressPrefix \"*\" -SourcePortRange * `\n    -DestinationAddressPrefix * -DestinationPortRange $port\n\n# Update the NSG.\n$nsg | Set-AzNetworkSecurityGroup",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Coupon Data",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.json",
                "csmParametersFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.parameters.json",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/vm.json",
                "csmParametersFile": "",
                "overrideParameters": "-name $(appprefix)-data -adminUsername $(vmadmin) -adminPassword $(vmpassword) -vnetRange $(dataVnet) -subnetRange $(dataSubnet) -imageID $(dataImageID)\n",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Open 3306 on Data NSG to Build Server",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$RGname=\"$(resourcegroup)\"\n$port=3306\n$nsgname=\"$(appprefix)-data\"\n\n# Get my public IP\n$myIp = Invoke-RestMethod -Method Get -Uri \"https://api.ipify.org\"\n$rulename=\"allow3306To$myIp\"\n\n# Get the NSG resource\n$resource = Get-AzResource | Where {$_.ResourceGroupName –eq $RGname -and $_.ResourceType -eq \"Microsoft.Network/networkSecurityGroups\"} \n$nsg = Get-AzNetworkSecurityGroup -Name $nsgname -ResourceGroupName $RGname\n\n$existingRule = Get-AzNetworkSecurityRuleConfig -NetworkSecurityGroup $nsg | Where-Object {$_.Name -eq $rulename}\n\nif($existingRule -eq $null)\n{\n    Write-Host 'Creating new inbound security rule'\n    \n    # Find existing max priority.\n    $maxPriority = 100;\n    foreach ($rule in (Get-AzNetworkSecurityRuleConfig -NetworkSecurityGroup $nsg))\n    {\n        if(($rule.Priority -lt 4096) -and ($rule.Priority -ge $maxPriority))\n        {\n            $maxPriority = $rule.Priority;\n        }\n    }\n\n    # Add new rule after all the prior ones.\n    $maxPriority++\n\n    # Add the inbound security rule.\n    $nsg | Add-AzNetworkSecurityRuleConfig -Name $rulename -Description \"Allow app port\" -Access Allow `\n        -Protocol * -Direction Inbound -Priority $maxPriority -SourceAddressPrefix \"$myIp\" -SourcePortRange * `\n        -DestinationAddressPrefix * -DestinationPortRange $port\n\n    # Update the NSG.\n    $nsg | Set-AzNetworkSecurityGroup\n}\n\n# TODO Warmup\n",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "App-Data Vnet Peering",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-existing-vnet-to-vnet-peering/azuredeploy.json",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/peer.json",
                "csmParametersFile": "",
                "overrideParameters": "-existingLocalVirtualNetworkName $(appprefix)-app-Vnet -existingRemoteVirtualNetworkName $(appprefix)-data-Vnet -existingRemoteVirtualNetworkResourceGroupName $(resourcegroup) -location $(location)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "JB-App Vnet Peering",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-existing-vnet-to-vnet-peering/azuredeploy.json",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/peer.json",
                "csmParametersFile": "",
                "overrideParameters": "-existingLocalVirtualNetworkName $(appprefix)-jb-Vnet -existingRemoteVirtualNetworkName $(appprefix)-app-Vnet -existingRemoteVirtualNetworkResourceGroupName $(resourcegroup) -location $(location)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "App-JB Vnet Peering",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-existing-vnet-to-vnet-peering/azuredeploy.json",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/peer.json",
                "csmParametersFile": "",
                "overrideParameters": "-existingLocalVirtualNetworkName $(appprefix)-app-Vnet -existingRemoteVirtualNetworkName $(appprefix)-jb-Vnet -existingRemoteVirtualNetworkResourceGroupName $(resourcegroup) -location $(location)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Data-App Vnet Peering",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-existing-vnet-to-vnet-peering/azuredeploy.json",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/peer.json",
                "csmParametersFile": "",
                "overrideParameters": "-existingLocalVirtualNetworkName $(appprefix)-data-Vnet -existingRemoteVirtualNetworkName $(appprefix)-app-Vnet -existingRemoteVirtualNetworkResourceGroupName $(resourcegroup) -location $(location)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "JIT access for Jumpbox",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$JitPolicy = (@{\n id=\"/subscriptions/$(azureSubID)/$(resourcegroup)/providers/Microsoft.Compute/virtualMachines/$(appprefix)-jb\"\nports=(@{\n     number=22;\n     protocol=\"*\";\n     allowedSourceAddressPrefix=@(\"*\");\n     maxRequestAccessDuration=\"PT3H\"},\n     @{\n     number=3389;\n     protocol=\"*\";\n     allowedSourceAddressPrefix=@(\"*\");\n     maxRequestAccessDuration=\"PT3H\"})})\n$JitPolicy = (@{\n id=\"/subscriptions/SUBSCRIPTIONID/resourceGroups/RESOURCEGROUP/providers/Microsoft.Compute/virtualMachines/VMNAME\"\nports=(@{\n     number=22;\n     protocol=\"*\";\n     allowedSourceAddressPrefix=@(\"*\");\n     maxRequestAccessDuration=\"PT3H\"},\n     @{\n     number=3389;\n     protocol=\"*\";\n     allowedSourceAddressPrefix=@(\"*\");\n     maxRequestAccessDuration=\"PT3H\"})})\n\n$JitPolicyArr=@($JitPolicy)\nSet-AzJitNetworkAccessPolicy -Kind \"Basic\" -Location $(location) -Name \"default\" -ResourceGroupName $(resourcegroup) -VirtualMachine $JitPolicyArr \n\n\n\n",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": "6.7.0"
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Extract Data VM Public and Private IPs",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$nic = Get-AzNetworkInterface -Name $(appprefix)-data-nic -ResourceGroupName $(resourcegroup)\n$privateIp = $nic.IpConfigurations | select-object -ExpandProperty PrivateIpAddress\n$publicIp = (Get-AzPublicIpAddress -ResourceGroupName $(resourcegroup) -Name $(appprefix)-data-ip).IpAddress\n\nWrite-Host \"##vso[task.setvariable variable=dataprivateip;]$privateIp\"\nWrite-Host \"##vso[task.setvariable variable=datapublicip;]$publicIp\"\n\n",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Update Env. Vars on App VM",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "Invoke-AzVMRunCommand -ResourceGroupName '$(resourcegroup)' -Name '$(appprefix)-app-vm' -CommandId 'RunPowerShellScript' -ScriptPath '$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/IaC/UpdateEnvVars.ps1' -Parameter @{datasourceUrl = 'jdbc:mysql://$(dataprivateip):3306/hotel_coupon?verifyServerCertificate=false\"&\"useSSL=false\"&\"requireSSL=false'; datasourceUsername = '$(databaseusername)'; datasourcePassword ='$(databasepassword)'}",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Extract App VM Public IP",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$publicIp = (Get-AzPublicIpAddress -ResourceGroupName $(resourcegroup) -Name $(appprefix)-app-ip).IpAddress\n\nWrite-Host \"##vso[task.setvariable variable=apppublicip;]$publicIp\"",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "Warmup Tomcat Manager",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "$baseUrl = \"http://$(apppublicip):8080/manager/text\"\n$User = \"manager\"\n$PWord = ConvertTo-SecureString -String \"manager@123\" -AsPlainText -Force\n$Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $User, $PWord\n\nWrite-Host $baseUrl\n\n$retries = 5\nwhile ($retries -gt 0) \n{\n    try\n    {    \n        Invoke-RestMethod -Method Get -Uri \"$baseUrl/list\" -Credential $Credential -TimeoutSec 90\n        Invoke-RestMethod -Method Get -Uri \"$baseUrl/serverinfo\" -Credential $Credential -TimeoutSec 90\n        Invoke-RestMethod -Method Get -Uri \"$baseUrl/stop?path=/examples\" -Credential $Credential -TimeoutSec 90\n        Invoke-RestMethod -Method Get -Uri \"$baseUrl/start?path=/examples\" -Credential $Credential -TimeoutSec 90\n        break;\n    }\n    catch\n    {\n        Write-Host 'Error' $_.Exception\n       \n        $retries--\n        if($retries -le 0)\n        {\n            throw\n        }\n\n        Start-Sleep -Seconds 10\n    }\n }\n",
                "errorActionPreference": "stop",
                "failOnStderr": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": ""
              }
            },
            {
              "environment": {},
              "taskId": "5d93dbe2-e57f-4b7c-a872-1e6b80a01904",
              "version": "0.*",
              "name": "Deploy application to a Tomcat server",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": true,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "TomcatUrl": "http://$(apppublicip):8080",
                "Username": "manager",
                "Password": "manager@123",
                "Warfile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/target/ROOT.war",
                "Context": "/",
                "ServerVersion": "7OrAbove"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "Update test settings",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "filePath",
                "filePath": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/scripts/UpdateVariablesAtRunTime.ps1",
                "arguments": "-configPath $(System.DefaultWorkingDirectory)/_Coupons-CI/drop/src/main/resources/application.properties  -mysqlUserName $(databaseusername) -mysqlPassword $(databasepassword)  -sourceUrl \"jdbc:mysql://$(datapublicip):3306/hotel_coupon?verifyServerCertificate=false&useSSL=false&requireSSL=false\" ",
                "script": "# Write your powershell commands here.\n\nWrite-Host \"Hello World\"\n\n# Use the environment variables input below to pass secret variables to this script.",
                "errorActionPreference": "stop",
                "failOnStderr": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": ""
              }
            },
            {
              "environment": {},
              "taskId": "ac4ee482-65da-4485-a532-7b085873e532",
              "version": "3.*",
              "name": "Functional Tests with BDD",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "mavenPOMFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/pom.xml",
                "goals": "failsafe:integration-test failsafe:verify",
                "options": "",
                "publishJUnitResults": "true",
                "testResultsFiles": "**/failsafe-reports/TEST-com.example.fabrikam.HotelCoupon.IntegrationTest.CouponControllerBDDIT.xml",
                "testRunTitle": "",
                "codeCoverageTool": "None",
                "classFilter": "",
                "classFilesDirectories": "",
                "srcDirectories": "",
                "failIfCoverageEmpty": "false",
                "javaHomeSelection": "JDKVersion",
                "jdkVersion": "default",
                "jdkUserInputPath": "",
                "jdkArchitecture": "x64",
                "mavenVersionSelection": "Default",
                "mavenPath": "",
                "mavenSetM2Home": "false",
                "mavenOpts": "-Xmx1024m",
                "mavenFeedAuthenticate": "false",
                "sqAnalysisEnabled": "false",
                "sqMavenPluginVersionChoice": "latest",
                "checkstyleAnalysisEnabled": "false",
                "pmdAnalysisEnabled": "false",
                "findbugsAnalysisEnabled": "false"
              }
            },
            {
              "environment": {},
              "taskId": "c016cc55-9914-4a9c-b9df-f24d6f9a40f6",
              "version": "3.*",
              "name": "AzSK_SVTs ",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "GenerateMethodParameterSetSelection": "ResourceGroupName",
                "ResourceGroupName": "$(resourcegroup)",
                "TagName": "",
                "TagValue": "",
                "SubscriptionId": "ES-INT-DOJO-DEV-DOJOWB-Conn",
                "EnableOMSLogging": "true",
                "AggregateControlsStatus": "false",
                "DisableAutoUpdate": "false"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        {
          "name": "Release to SIT",
          "conditionType": 2,
          "value": "4"
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [],
      "currentRelease": {
        "id": 325,
        "url": "https://servicescode.vsrm.visualstudio.com/5f64706a-c618-4444-8fec-a037e2197618/_apis/Release/releases/325",
        "_links": {}
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {},
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": [],
      "badgeUrl": "https://servicescode.vsrm.visualstudio.com/_apis/public/Release/badge/5f64706a-c618-4444-8fec-a037e2197618/12/45"
    },
    {
      "id": 46,
      "name": "Release to Staging",
      "rank": 4,
      "owner": {
        "displayName": "Sandeep Maurya",
        "url": "https://vssps.dev.azure.com/e/Microsoft/_apis/Identities/b8a89a7b-4403-42f2-b8ac-7237075a2575",
        "_links": { "avatar": { "href": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.YzBhMDQxMDYtNjU3Yy03YjM5LWE2YmYtYmIwZDQ3NGViYTBj" } },
        "id": "b8a89a7b-4403-42f2-b8ac-7237075a2575",
        "uniqueName": "samau@microsoft.com",
        "imageUrl": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.YzBhMDQxMDYtNjU3Yy03YjM5LWE2YmYtYmIwZDQ3NGViYTBj",
        "descriptor": "aad.YzBhMDQxMDYtNjU3Yy03YjM5LWE2YmYtYmIwZDQ3NGViYTBj"
      },
      "variables": {},
      "variableGroups": [ 21 ],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": false,
            "isNotificationOn": false,
            "approver": {
              "displayName": "[DevOps-Dojo]\\DevOps-Dojo Team",
              "url": "https://vssps.dev.azure.com/e/Microsoft/_apis/Identities/992a641a-9d90-47f1-bcaf-017c3602776e",
              "_links": { "avatar": { "href": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/vssgp.Uy0xLTktMTU1MTM3NDI0NS0xNzg1NzUwNjIzLTQxNTY0Njc4OC0yNDE0NjQ5Mzk5LTM3OTMzMTk0NDgtMS0zNzc0MjY5NTI1LTg5Njg5NjA3Ni0yMjU5Nzg3NjIyLTMwMjgwMDI1NTY" } },
              "id": "992a641a-9d90-47f1-bcaf-017c3602776e",
              "uniqueName": "vstfs:///Classification/TeamProject/5f64706a-c618-4444-8fec-a037e2197618\\DevOps-Dojo Team",
              "imageUrl": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/vssgp.Uy0xLTktMTU1MTM3NDI0NS0xNzg1NzUwNjIzLTQxNTY0Njc4OC0yNDE0NjQ5Mzk5LTM3OTMzMTk0NDgtMS0zNzc0MjY5NTI1LTg5Njg5NjA3Ni0yMjU5Nzg3NjIyLTMwMjgwMDI1NTY",
              "isContainer": true,
              "descriptor": "vssgp.Uy0xLTktMTU1MTM3NDI0NS0xNzg1NzUwNjIzLTQxNTY0Njc4OC0yNDE0NjQ5Mzk5LTM3OTMzMTk0NDgtMS0zNzc0MjY5NTI1LTg5Njg5NjA3Ni0yMjU5Nzg3NjIyLTMwMjgwMDI1NTY"
            },
            "id": 146
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": true,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": { "id": 149 },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 152
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": { "parallelExecutionType": 0 },
            "agentSpecification": null,
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "_Coupons-CI",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 4593,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Deploy application",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Coupon Jumpbox",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.json",
                "csmParametersFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.parameters.json",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/jumpbox.json",
                "csmParametersFile": "",
                "overrideParameters": "-vmssName $(appprefix)-jb -instanceCount 1 -adminUsername $(vmadmin) -adminPassword $(vmpassword) -subnetRange $(jbSubnet) -vnetRange $(jbVnet)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Coupon App",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.json",
                "csmParametersFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.parameters.json",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/vm.json",
                "csmParametersFile": "",
                "overrideParameters": "-name $(appprefix)-app -adminUsername $(vmadmin) -adminPassword $(vmpassword) -vnetRange $(appVnet) -subnetRange $(appSubnet) -imageID $(appImageID)\n",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "appvmarmoutput",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Open 8080 on App NSG to Internet",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$RGname=\"$(resourcegroup)\"\n$port=8080\n$rulename=\"allowAppPort$port\"\n$nsgname=\"$(appprefix)-app\"\n\n# Get the NSG resource\n$resource = Get-AzResource | Where {$_.ResourceGroupName –eq $RGname -and $_.ResourceType -eq \"Microsoft.Network/networkSecurityGroups\"} \n$nsg = Get-AzNetworkSecurityGroup -Name $nsgname -ResourceGroupName $RGname\n\n# Add the inbound security rule.\n$nsg | Add-AzNetworkSecurityRuleConfig -Name $rulename -Description \"Allow app port\" -Access Allow `\n    -Protocol * -Direction Inbound -Priority 100 -SourceAddressPrefix \"*\" -SourcePortRange * `\n    -DestinationAddressPrefix * -DestinationPortRange $port\n\n# Update the NSG.\n$nsg | Set-AzNetworkSecurityGroup",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Coupon Data",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.json",
                "csmParametersFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.parameters.json",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/vm.json",
                "csmParametersFile": "",
                "overrideParameters": "-name $(appprefix)-data -adminUsername $(vmadmin) -adminPassword $(vmpassword) -vnetRange $(dataVnet) -subnetRange $(dataSubnet) -imageID $(dataImageID)\n",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Open 3306 on Data NSG to Build Server",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$RGname=\"$(resourcegroup)\"\n$port=3306\n$nsgname=\"$(appprefix)-data\"\n\n# Get my public IP\n$myIp = Invoke-RestMethod -Method Get -Uri \"https://api.ipify.org\"\n$rulename=\"allow3306To$myIp\"\n\n# Get the NSG resource\n$resource = Get-AzResource | Where {$_.ResourceGroupName –eq $RGname -and $_.ResourceType -eq \"Microsoft.Network/networkSecurityGroups\"} \n$nsg = Get-AzNetworkSecurityGroup -Name $nsgname -ResourceGroupName $RGname\n\n$existingRule = Get-AzNetworkSecurityRuleConfig -NetworkSecurityGroup $nsg | Where-Object {$_.Name -eq $rulename}\n\nif($existingRule -eq $null)\n{\n    Write-Host 'Creating new inbound security rule'\n    \n    # Find existing max priority.\n    $maxPriority = 100;\n    foreach ($rule in (Get-AzNetworkSecurityRuleConfig -NetworkSecurityGroup $nsg))\n    {\n        if(($rule.Priority -lt 4096) -and ($rule.Priority -ge $maxPriority))\n        {\n            $maxPriority = $rule.Priority;\n        }\n    }\n\n    # Add new rule after all the prior ones.\n    $maxPriority++\n\n    # Add the inbound security rule.\n    $nsg | Add-AzNetworkSecurityRuleConfig -Name $rulename -Description \"Allow app port\" -Access Allow `\n        -Protocol * -Direction Inbound -Priority $maxPriority -SourceAddressPrefix \"$myIp\" -SourcePortRange * `\n        -DestinationAddressPrefix * -DestinationPortRange $port\n\n    # Update the NSG.\n    $nsg | Set-AzNetworkSecurityGroup\n}\n\n# TODO Warmup\n",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "App-Data Vnet Peering",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-existing-vnet-to-vnet-peering/azuredeploy.json",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/peer.json",
                "csmParametersFile": "",
                "overrideParameters": "-existingLocalVirtualNetworkName $(appprefix)-app-Vnet -existingRemoteVirtualNetworkName $(appprefix)-data-Vnet -existingRemoteVirtualNetworkResourceGroupName $(resourcegroup) -location $(location)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "JB-App Vnet Peering",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-existing-vnet-to-vnet-peering/azuredeploy.json",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/peer.json",
                "csmParametersFile": "",
                "overrideParameters": "-existingLocalVirtualNetworkName $(appprefix)-jb-Vnet -existingRemoteVirtualNetworkName $(appprefix)-app-Vnet -existingRemoteVirtualNetworkResourceGroupName $(resourcegroup) -location $(location)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "App-JB Vnet Peering",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-existing-vnet-to-vnet-peering/azuredeploy.json",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/peer.json",
                "csmParametersFile": "",
                "overrideParameters": "-existingLocalVirtualNetworkName $(appprefix)-app-Vnet -existingRemoteVirtualNetworkName $(appprefix)-jb-Vnet -existingRemoteVirtualNetworkResourceGroupName $(resourcegroup) -location $(location)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Data-App Vnet Peering",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-existing-vnet-to-vnet-peering/azuredeploy.json",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/peer.json",
                "csmParametersFile": "",
                "overrideParameters": "-existingLocalVirtualNetworkName $(appprefix)-data-Vnet -existingRemoteVirtualNetworkName $(appprefix)-app-Vnet -existingRemoteVirtualNetworkResourceGroupName $(resourcegroup) -location $(location)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "JIT access for Jumpbox",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$JitPolicy = (@{\n id=\"/subscriptions/$(azureSubID)/$(resourcegroup)/providers/Microsoft.Compute/virtualMachines/$(appprefix)-jb\"\nports=(@{\n     number=22;\n     protocol=\"*\";\n     allowedSourceAddressPrefix=@(\"*\");\n     maxRequestAccessDuration=\"PT3H\"},\n     @{\n     number=3389;\n     protocol=\"*\";\n     allowedSourceAddressPrefix=@(\"*\");\n     maxRequestAccessDuration=\"PT3H\"})})\n$JitPolicy = (@{\n id=\"/subscriptions/SUBSCRIPTIONID/resourceGroups/RESOURCEGROUP/providers/Microsoft.Compute/virtualMachines/VMNAME\"\nports=(@{\n     number=22;\n     protocol=\"*\";\n     allowedSourceAddressPrefix=@(\"*\");\n     maxRequestAccessDuration=\"PT3H\"},\n     @{\n     number=3389;\n     protocol=\"*\";\n     allowedSourceAddressPrefix=@(\"*\");\n     maxRequestAccessDuration=\"PT3H\"})})\n\n$JitPolicyArr=@($JitPolicy)\nSet-AzJitNetworkAccessPolicy -Kind \"Basic\" -Location $(location) -Name \"default\" -ResourceGroupName $(resourcegroup) -VirtualMachine $JitPolicyArr \n\n\n\n",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": "6.7.0"
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Extract Data VM Public and Private IPs",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$nic = Get-AzNetworkInterface -Name $(appprefix)-data-nic -ResourceGroupName $(resourcegroup)\n$privateIp = $nic.IpConfigurations | select-object -ExpandProperty PrivateIpAddress\n$publicIp = (Get-AzPublicIpAddress -ResourceGroupName $(resourcegroup) -Name $(appprefix)-data-ip).IpAddress\n\nWrite-Host \"##vso[task.setvariable variable=dataprivateip;]$privateIp\"\nWrite-Host \"##vso[task.setvariable variable=datapublicip;]$publicIp\"\n\n",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Update Env. Vars on App VM",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "Invoke-AzVMRunCommand -ResourceGroupName '$(resourcegroup)' -Name '$(appprefix)-app-vm' -CommandId 'RunPowerShellScript' -ScriptPath '$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/IaC/UpdateEnvVars.ps1' -Parameter @{datasourceUrl = 'jdbc:mysql://$(dataprivateip):3306/hotel_coupon?verifyServerCertificate=false\"&\"useSSL=false\"&\"requireSSL=false'; datasourceUsername = '$(databaseusername)'; datasourcePassword ='$(databasepassword)'}",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Extract App VM Public IP",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$publicIp = (Get-AzPublicIpAddress -ResourceGroupName $(resourcegroup) -Name $(appprefix)-app-ip).IpAddress\n\nWrite-Host \"##vso[task.setvariable variable=apppublicip;]$publicIp\"",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "Warmup Tomcat Manager",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "$baseUrl = \"http://$(apppublicip):8080/manager/text\"\n$User = \"manager\"\n$PWord = ConvertTo-SecureString -String \"manager@123\" -AsPlainText -Force\n$Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $User, $PWord\n\nWrite-Host $baseUrl\n\n$retries = 5\nwhile ($retries -gt 0) \n{\n    try\n    {    \n        Invoke-RestMethod -Method Get -Uri \"$baseUrl/list\" -Credential $Credential -TimeoutSec 90\n        Invoke-RestMethod -Method Get -Uri \"$baseUrl/serverinfo\" -Credential $Credential -TimeoutSec 90\n        Invoke-RestMethod -Method Get -Uri \"$baseUrl/stop?path=/examples\" -Credential $Credential -TimeoutSec 90\n        Invoke-RestMethod -Method Get -Uri \"$baseUrl/start?path=/examples\" -Credential $Credential -TimeoutSec 90\n        break;\n    }\n    catch\n    {\n        Write-Host 'Error' $_.Exception\n       \n        $retries--\n        if($retries -le 0)\n        {\n            throw\n        }\n\n        Start-Sleep -Seconds 10\n    }\n }\n",
                "errorActionPreference": "stop",
                "failOnStderr": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": ""
              }
            },
            {
              "environment": {},
              "taskId": "5d93dbe2-e57f-4b7c-a872-1e6b80a01904",
              "version": "0.*",
              "name": "Deploy application to a Tomcat server",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": true,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "TomcatUrl": "http://$(apppublicip):8080",
                "Username": "manager",
                "Password": "manager@123",
                "Warfile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/target/ROOT.war",
                "Context": "/",
                "ServerVersion": "7OrAbove"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "Update test settings",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "filePath",
                "filePath": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/scripts/UpdateVariablesAtRunTime.ps1",
                "arguments": "-configPath $(System.DefaultWorkingDirectory)/_Coupons-CI/drop/src/main/resources/application.properties  -mysqlUserName $(databaseusername) -mysqlPassword $(databasepassword)  -sourceUrl \"jdbc:mysql://$(datapublicip):3306/hotel_coupon?verifyServerCertificate=false&useSSL=false&requireSSL=false\" ",
                "script": "# Write your powershell commands here.\n\nWrite-Host \"Hello World\"\n\n# Use the environment variables input below to pass secret variables to this script.",
                "errorActionPreference": "stop",
                "failOnStderr": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": ""
              }
            },
            {
              "environment": {},
              "taskId": "ac4ee482-65da-4485-a532-7b085873e532",
              "version": "3.*",
              "name": "Functional Tests with BDD",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "mavenPOMFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/pom.xml",
                "goals": "failsafe:integration-test failsafe:verify",
                "options": "",
                "publishJUnitResults": "true",
                "testResultsFiles": "**/failsafe-reports/TEST-com.example.fabrikam.HotelCoupon.IntegrationTest.CouponControllerBDDIT.xml",
                "testRunTitle": "",
                "codeCoverageTool": "None",
                "classFilter": "",
                "classFilesDirectories": "",
                "srcDirectories": "",
                "failIfCoverageEmpty": "false",
                "javaHomeSelection": "JDKVersion",
                "jdkVersion": "default",
                "jdkUserInputPath": "",
                "jdkArchitecture": "x64",
                "mavenVersionSelection": "Default",
                "mavenPath": "",
                "mavenSetM2Home": "false",
                "mavenOpts": "-Xmx1024m",
                "mavenFeedAuthenticate": "false",
                "sqAnalysisEnabled": "false",
                "sqMavenPluginVersionChoice": "latest",
                "checkstyleAnalysisEnabled": "false",
                "pmdAnalysisEnabled": "false",
                "findbugsAnalysisEnabled": "false"
              }
            },
            {
              "environment": {},
              "taskId": "c016cc55-9914-4a9c-b9df-f24d6f9a40f6",
              "version": "3.*",
              "name": "AzSK_SVTs ",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "GenerateMethodParameterSetSelection": "ResourceGroupName",
                "ResourceGroupName": "$(resourcegroup)",
                "TagName": "",
                "TagValue": "",
                "SubscriptionId": "ES-INT-DOJO-DEV-DOJOWB-Conn",
                "EnableOMSLogging": "true",
                "AggregateControlsStatus": "false",
                "DisableAutoUpdate": "false"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        {
          "name": "Release to QA",
          "conditionType": 2,
          "value": "4"
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [],
      "currentRelease": {
        "id": 325,
        "url": "https://servicescode.vsrm.visualstudio.com/5f64706a-c618-4444-8fec-a037e2197618/_apis/Release/releases/325",
        "_links": {}
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {},
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": [],
      "badgeUrl": "https://servicescode.vsrm.visualstudio.com/_apis/public/Release/badge/5f64706a-c618-4444-8fec-a037e2197618/12/46"
    },
    {
      "id": 47,
      "name": "Release to Prod",
      "rank": 5,
      "owner": {
        "displayName": "Sandeep Maurya",
        "url": "https://vssps.dev.azure.com/e/Microsoft/_apis/Identities/b8a89a7b-4403-42f2-b8ac-7237075a2575",
        "_links": { "avatar": { "href": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.YzBhMDQxMDYtNjU3Yy03YjM5LWE2YmYtYmIwZDQ3NGViYTBj" } },
        "id": "b8a89a7b-4403-42f2-b8ac-7237075a2575",
        "uniqueName": "samau@microsoft.com",
        "imageUrl": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/aad.YzBhMDQxMDYtNjU3Yy03YjM5LWE2YmYtYmIwZDQ3NGViYTBj",
        "descriptor": "aad.YzBhMDQxMDYtNjU3Yy03YjM5LWE2YmYtYmIwZDQ3NGViYTBj"
      },
      "variables": {},
      "variableGroups": [ 22 ],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": false,
            "isNotificationOn": false,
            "approver": {
              "displayName": "[DevOps-Dojo]\\DevOps-Dojo Team",
              "url": "https://vssps.dev.azure.com/e/Microsoft/_apis/Identities/992a641a-9d90-47f1-bcaf-017c3602776e",
              "_links": { "avatar": { "href": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/vssgp.Uy0xLTktMTU1MTM3NDI0NS0xNzg1NzUwNjIzLTQxNTY0Njc4OC0yNDE0NjQ5Mzk5LTM3OTMzMTk0NDgtMS0zNzc0MjY5NTI1LTg5Njg5NjA3Ni0yMjU5Nzg3NjIyLTMwMjgwMDI1NTY" } },
              "id": "992a641a-9d90-47f1-bcaf-017c3602776e",
              "uniqueName": "vstfs:///Classification/TeamProject/5f64706a-c618-4444-8fec-a037e2197618\\DevOps-Dojo Team",
              "imageUrl": "https://servicescode.visualstudio.com/_apis/GraphProfile/MemberAvatars/vssgp.Uy0xLTktMTU1MTM3NDI0NS0xNzg1NzUwNjIzLTQxNTY0Njc4OC0yNDE0NjQ5Mzk5LTM3OTMzMTk0NDgtMS0zNzc0MjY5NTI1LTg5Njg5NjA3Ni0yMjU5Nzg3NjIyLTMwMjgwMDI1NTY",
              "isContainer": true,
              "descriptor": "vssgp.Uy0xLTktMTU1MTM3NDI0NS0xNzg1NzUwNjIzLTQxNTY0Njc4OC0yNDE0NjQ5Mzk5LTM3OTMzMTk0NDgtMS0zNzc0MjY5NTI1LTg5Njg5NjA3Ni0yMjU5Nzg3NjIyLTMwMjgwMDI1NTY"
            },
            "id": 147
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": true,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 1
        }
      },
      "deployStep": { "id": 148 },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 153
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": 2
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": { "parallelExecutionType": 0 },
            "agentSpecification": null,
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": [
                {
                  "alias": "_Coupons-CI",
                  "artifactType": "Build",
                  "artifactDownloadMode": "All",
                  "artifactItems": []
                }
              ]
            },
            "queueId": 4593,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Deploy application",
          "refName": null,
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Coupon Jumpbox",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.json",
                "csmParametersFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.parameters.json",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/jumpbox.json",
                "csmParametersFile": "",
                "overrideParameters": "-vmssName $(appprefix)-jb -instanceCount 1 -adminUsername $(vmadmin) -adminPassword $(vmpassword) -subnetRange $(jbSubnet) -vnetRange $(jbVnet)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Coupon App",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.json",
                "csmParametersFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.parameters.json",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/vm.json",
                "csmParametersFile": "",
                "overrideParameters": "-name $(appprefix)-app -adminUsername $(vmadmin) -adminPassword $(vmpassword) -vnetRange $(appVnet) -subnetRange $(appSubnet) -imageID $(appImageID)\n",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "appvmarmoutput",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Open 8080 on App NSG to Internet",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$RGname=\"$(resourcegroup)\"\n$port=8080\n$rulename=\"allowAppPort$port\"\n$nsgname=\"$(appprefix)-app\"\n\n# Get the NSG resource\n$resource = Get-AzResource | Where {$_.ResourceGroupName –eq $RGname -and $_.ResourceType -eq \"Microsoft.Network/networkSecurityGroups\"} \n$nsg = Get-AzNetworkSecurityGroup -Name $nsgname -ResourceGroupName $RGname\n\n# Add the inbound security rule.\n$nsg | Add-AzNetworkSecurityRuleConfig -Name $rulename -Description \"Allow app port\" -Access Allow `\n    -Protocol * -Direction Inbound -Priority 100 -SourceAddressPrefix \"*\" -SourcePortRange * `\n    -DestinationAddressPrefix * -DestinationPortRange $port\n\n# Update the NSG.\n$nsg | Set-AzNetworkSecurityGroup",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Coupon Data",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.json",
                "csmParametersFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-vmss-windows-jumpbox/azuredeploy.parameters.json",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/vm.json",
                "csmParametersFile": "",
                "overrideParameters": "-name $(appprefix)-data -adminUsername $(vmadmin) -adminPassword $(vmpassword) -vnetRange $(dataVnet) -subnetRange $(dataSubnet) -imageID $(dataImageID)\n",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Open 3306 on Data NSG to Build Server",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$RGname=\"$(resourcegroup)\"\n$port=3306\n$nsgname=\"$(appprefix)-data\"\n\n# Get my public IP\n$myIp = Invoke-RestMethod -Method Get -Uri \"https://api.ipify.org\"\n$rulename=\"allow3306To$myIp\"\n\n# Get the NSG resource\n$resource = Get-AzResource | Where {$_.ResourceGroupName –eq $RGname -and $_.ResourceType -eq \"Microsoft.Network/networkSecurityGroups\"} \n$nsg = Get-AzNetworkSecurityGroup -Name $nsgname -ResourceGroupName $RGname\n\n$existingRule = Get-AzNetworkSecurityRuleConfig -NetworkSecurityGroup $nsg | Where-Object {$_.Name -eq $rulename}\n\nif($existingRule -eq $null)\n{\n    Write-Host 'Creating new inbound security rule'\n    \n    # Find existing max priority.\n    $maxPriority = 100;\n    foreach ($rule in (Get-AzNetworkSecurityRuleConfig -NetworkSecurityGroup $nsg))\n    {\n        if(($rule.Priority -lt 4096) -and ($rule.Priority -ge $maxPriority))\n        {\n            $maxPriority = $rule.Priority;\n        }\n    }\n\n    # Add new rule after all the prior ones.\n    $maxPriority++\n\n    # Add the inbound security rule.\n    $nsg | Add-AzNetworkSecurityRuleConfig -Name $rulename -Description \"Allow app port\" -Access Allow `\n        -Protocol * -Direction Inbound -Priority $maxPriority -SourceAddressPrefix \"$myIp\" -SourcePortRange * `\n        -DestinationAddressPrefix * -DestinationPortRange $port\n\n    # Update the NSG.\n    $nsg | Set-AzNetworkSecurityGroup\n}\n\n# TODO Warmup\n",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "App-Data Vnet Peering",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-existing-vnet-to-vnet-peering/azuredeploy.json",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/peer.json",
                "csmParametersFile": "",
                "overrideParameters": "-existingLocalVirtualNetworkName $(appprefix)-app-Vnet -existingRemoteVirtualNetworkName $(appprefix)-data-Vnet -existingRemoteVirtualNetworkResourceGroupName $(resourcegroup) -location $(location)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "JB-App Vnet Peering",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-existing-vnet-to-vnet-peering/azuredeploy.json",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/peer.json",
                "csmParametersFile": "",
                "overrideParameters": "-existingLocalVirtualNetworkName $(appprefix)-jb-Vnet -existingRemoteVirtualNetworkName $(appprefix)-app-Vnet -existingRemoteVirtualNetworkResourceGroupName $(resourcegroup) -location $(location)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "App-JB Vnet Peering",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-existing-vnet-to-vnet-peering/azuredeploy.json",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/peer.json",
                "csmParametersFile": "",
                "overrideParameters": "-existingLocalVirtualNetworkName $(appprefix)-app-Vnet -existingRemoteVirtualNetworkName $(appprefix)-jb-Vnet -existingRemoteVirtualNetworkResourceGroupName $(resourcegroup) -location $(location)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Data-App Vnet Peering",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/201-existing-vnet-to-vnet-peering/azuredeploy.json",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/iaas/templates/peer.json",
                "csmParametersFile": "",
                "overrideParameters": "-existingLocalVirtualNetworkName $(appprefix)-data-Vnet -existingRemoteVirtualNetworkName $(appprefix)-app-Vnet -existingRemoteVirtualNetworkResourceGroupName $(resourcegroup) -location $(location)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentName": "",
                "deploymentOutputs": "",
                "addSpnToEnvironment": "false"
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "JIT access for Jumpbox",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$JitPolicy = (@{\n id=\"/subscriptions/$(azureSubID)/$(resourcegroup)/providers/Microsoft.Compute/virtualMachines/$(appprefix)-jb\"\nports=(@{\n     number=22;\n     protocol=\"*\";\n     allowedSourceAddressPrefix=@(\"*\");\n     maxRequestAccessDuration=\"PT3H\"},\n     @{\n     number=3389;\n     protocol=\"*\";\n     allowedSourceAddressPrefix=@(\"*\");\n     maxRequestAccessDuration=\"PT3H\"})})\n$JitPolicy = (@{\n id=\"/subscriptions/SUBSCRIPTIONID/resourceGroups/RESOURCEGROUP/providers/Microsoft.Compute/virtualMachines/VMNAME\"\nports=(@{\n     number=22;\n     protocol=\"*\";\n     allowedSourceAddressPrefix=@(\"*\");\n     maxRequestAccessDuration=\"PT3H\"},\n     @{\n     number=3389;\n     protocol=\"*\";\n     allowedSourceAddressPrefix=@(\"*\");\n     maxRequestAccessDuration=\"PT3H\"})})\n\n$JitPolicyArr=@($JitPolicy)\nSet-AzJitNetworkAccessPolicy -Kind \"Basic\" -Location $(location) -Name \"default\" -ResourceGroupName $(resourcegroup) -VirtualMachine $JitPolicyArr \n\n\n\n",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": "6.7.0"
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Extract Data VM Public and Private IPs",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$nic = Get-AzNetworkInterface -Name $(appprefix)-data-nic -ResourceGroupName $(resourcegroup)\n$privateIp = $nic.IpConfigurations | select-object -ExpandProperty PrivateIpAddress\n$publicIp = (Get-AzPublicIpAddress -ResourceGroupName $(resourcegroup) -Name $(appprefix)-data-ip).IpAddress\n\nWrite-Host \"##vso[task.setvariable variable=dataprivateip;]$privateIp\"\nWrite-Host \"##vso[task.setvariable variable=datapublicip;]$publicIp\"\n\n",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Update Env. Vars on App VM",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "Invoke-AzVMRunCommand -ResourceGroupName '$(resourcegroup)' -Name '$(appprefix)-app-vm' -CommandId 'RunPowerShellScript' -ScriptPath '$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/IaC/UpdateEnvVars.ps1' -Parameter @{datasourceUrl = 'jdbc:mysql://$(dataprivateip):3306/hotel_coupon?verifyServerCertificate=false\"&\"useSSL=false\"&\"requireSSL=false'; datasourceUsername = '$(databaseusername)'; datasourcePassword ='$(databasepassword)'}",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "4.*",
              "name": "Extract App VM Public IP",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "ScriptType": "InlineScript",
                "ScriptPath": "",
                "Inline": "$publicIp = (Get-AzPublicIpAddress -ResourceGroupName $(resourcegroup) -Name $(appprefix)-app-ip).IpAddress\n\nWrite-Host \"##vso[task.setvariable variable=apppublicip;]$publicIp\"",
                "ScriptArguments": "",
                "errorActionPreference": "stop",
                "FailOnStandardError": "false",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "Warmup Tomcat Manager",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "inline",
                "filePath": "",
                "arguments": "",
                "script": "$baseUrl = \"http://$(apppublicip):8080/manager/text\"\n$User = \"manager\"\n$PWord = ConvertTo-SecureString -String \"manager@123\" -AsPlainText -Force\n$Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $User, $PWord\n\nWrite-Host $baseUrl\n\n$retries = 5\nwhile ($retries -gt 0) \n{\n    try\n    {    \n        Invoke-RestMethod -Method Get -Uri \"$baseUrl/list\" -Credential $Credential -TimeoutSec 90\n        Invoke-RestMethod -Method Get -Uri \"$baseUrl/serverinfo\" -Credential $Credential -TimeoutSec 90\n        Invoke-RestMethod -Method Get -Uri \"$baseUrl/stop?path=/examples\" -Credential $Credential -TimeoutSec 90\n        Invoke-RestMethod -Method Get -Uri \"$baseUrl/start?path=/examples\" -Credential $Credential -TimeoutSec 90\n        break;\n    }\n    catch\n    {\n        Write-Host 'Error' $_.Exception\n       \n        $retries--\n        if($retries -le 0)\n        {\n            throw\n        }\n\n        Start-Sleep -Seconds 10\n    }\n }\n",
                "errorActionPreference": "stop",
                "failOnStderr": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": ""
              }
            },
            {
              "environment": {},
              "taskId": "5d93dbe2-e57f-4b7c-a872-1e6b80a01904",
              "version": "0.*",
              "name": "Deploy application to a Tomcat server",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": true,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "TomcatUrl": "http://$(apppublicip):8080",
                "Username": "manager",
                "Password": "manager@123",
                "Warfile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/target/ROOT.war",
                "Context": "/",
                "ServerVersion": "7OrAbove"
              }
            },
            {
              "environment": {},
              "taskId": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "version": "2.*",
              "name": "Update test settings",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "targetType": "filePath",
                "filePath": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/scripts/UpdateVariablesAtRunTime.ps1",
                "arguments": "-configPath $(System.DefaultWorkingDirectory)/_Coupons-CI/drop/src/main/resources/application.properties  -mysqlUserName $(databaseusername) -mysqlPassword $(databasepassword)  -sourceUrl \"jdbc:mysql://$(datapublicip):3306/hotel_coupon?verifyServerCertificate=false&useSSL=false&requireSSL=false\" ",
                "script": "# Write your powershell commands here.\n\nWrite-Host \"Hello World\"\n\n# Use the environment variables input below to pass secret variables to this script.",
                "errorActionPreference": "stop",
                "failOnStderr": "false",
                "ignoreLASTEXITCODE": "false",
                "pwsh": "false",
                "workingDirectory": ""
              }
            },
            {
              "environment": {},
              "taskId": "ac4ee482-65da-4485-a532-7b085873e532",
              "version": "3.*",
              "name": "Functional Tests with BDD",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "mavenPOMFile": "$(System.DefaultWorkingDirectory)/_Coupons-CI/drop/pom.xml",
                "goals": "failsafe:integration-test failsafe:verify",
                "options": "",
                "publishJUnitResults": "true",
                "testResultsFiles": "**/failsafe-reports/TEST-com.example.fabrikam.HotelCoupon.IntegrationTest.CouponControllerBDDIT.xml",
                "testRunTitle": "",
                "codeCoverageTool": "None",
                "classFilter": "",
                "classFilesDirectories": "",
                "srcDirectories": "",
                "failIfCoverageEmpty": "false",
                "javaHomeSelection": "JDKVersion",
                "jdkVersion": "default",
                "jdkUserInputPath": "",
                "jdkArchitecture": "x64",
                "mavenVersionSelection": "Default",
                "mavenPath": "",
                "mavenSetM2Home": "false",
                "mavenOpts": "-Xmx1024m",
                "mavenFeedAuthenticate": "false",
                "sqAnalysisEnabled": "false",
                "sqMavenPluginVersionChoice": "latest",
                "checkstyleAnalysisEnabled": "false",
                "pmdAnalysisEnabled": "false",
                "findbugsAnalysisEnabled": "false"
              }
            },
            {
              "environment": {},
              "taskId": "c016cc55-9914-4a9c-b9df-f24d6f9a40f6",
              "version": "3.*",
              "name": "AzSK_SVTs ",
              "refName": "",
              "enabled": false,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameARM": "42d12fa4-90f5-4ca4-919e-25542ab8efce",
                "GenerateMethodParameterSetSelection": "ResourceGroupName",
                "ResourceGroupName": "$(resourcegroup)",
                "TagName": "",
                "TagValue": "",
                "SubscriptionId": "ES-INT-DOJO-DEV-DOJOWB-Conn",
                "EnableOMSLogging": "true",
                "AggregateControlsStatus": "false",
                "DisableAutoUpdate": "false"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        {
          "name": "Release to Staging",
          "conditionType": 2,
          "value": "4"
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 1,
        "queueDepthCount": 0
      },
      "schedules": [],
      "currentRelease": {
        "id": 325,
        "url": "https://servicescode.vsrm.visualstudio.com/5f64706a-c618-4444-8fec-a037e2197618/_apis/Release/releases/325",
        "_links": {}
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {},
      "properties": {},
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": [],
      "badgeUrl": "https://servicescode.vsrm.visualstudio.com/_apis/public/Release/badge/5f64706a-c618-4444-8fec-a037e2197618/12/47"
    }
  ],
  "artifacts": [
    {
      "sourceId": "5f64706a-c618-4444-8fec-a037e2197618:295",
      "type": "Build",
      "alias": "_Coupons-CI",
      "definitionReference": {
        "artifactSourceDefinitionUrl": {
          "id": "https://servicescode.visualstudio.com/_permalink/_build/index?collectionId=353e3837-8e17-443a-a6fe-81c6faabbf5e&projectId=5f64706a-c618-4444-8fec-a037e2197618&definitionId=295",
          "name": ""
        },
        "defaultVersionBranch": {
          "id": "",
          "name": ""
        },
        "defaultVersionSpecific": {
          "id": "",
          "name": ""
        },
        "defaultVersionTags": {
          "id": "",
          "name": ""
        },
        "defaultVersionType": {
          "id": "latestType",
          "name": "Latest"
        },
        "definition": {
          "id": "295",
          "name": "Coupons-CI"
        },
        "definitions": {
          "id": "",
          "name": ""
        },
        "IsMultiDefinitionType": {
          "id": "False",
          "name": "False"
        },
        "project": {
          "id": "5f64706a-c618-4444-8fec-a037e2197618",
          "name": "DevOps-Dojo"
        },
        "repository": {
          "id": "",
          "name": ""
        }
      },
      "isPrimary": true,
      "isRetained": false
    }
  ],
  "triggers": [
    {
      "artifactAlias": "_Coupons-CI",
      "triggerConditions": [
        {
          "sourceBranch": "master",
          "tags": [],
          "useBuildDefinitionBranch": false,
          "createReleaseOnBuildTagging": false
        }
      ],
      "triggerType": 1
    }
  ],
  "releaseNameFormat": "Release-$(rev:r)",
  "tags": [],
  "pipelineProcess": { "type": 1 },
  "properties": {
    "DefinitionCreationSource": {
      "$type": "System.String",
      "$value": "ReleaseClone"
    }
  },
  "id": 12,
  "name": "Coupons-IaC-CD",
  "path": "\\",
  "projectReference": null,
  "url": "https://servicescode.vsrm.visualstudio.com/5f64706a-c618-4444-8fec-a037e2197618/_apis/Release/definitions/12",
  "_links": {
    "self": { "href": "https://servicescode.vsrm.visualstudio.com/5f64706a-c618-4444-8fec-a037e2197618/_apis/Release/definitions/12" },
    "web": { "href": "https://servicescode.visualstudio.com/5f64706a-c618-4444-8fec-a037e2197618/_release?definitionId=12" }
  }
}